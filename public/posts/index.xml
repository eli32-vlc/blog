<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on The Glitch Report</title>
    <link>http://localhost:1313/posts/</link>
    <description>Recent content in Posts on The Glitch Report</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>© Zenith Rifle</copyright>
    <lastBuildDate>Sun, 15 Jun 2025 12:36:15 +1000</lastBuildDate>
    <atom:link href="http://localhost:1313/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Technical Insights into the Great Firewall of China</title>
      <link>http://localhost:1313/posts/technical-insights-into-the-great-firewall-of-china/</link>
      <pubDate>Sun, 15 Jun 2025 12:36:15 +1000</pubDate>
      <guid>http://localhost:1313/posts/technical-insights-into-the-great-firewall-of-china/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://files.catbox.moe/n1u6by.png&#34; alt=&#34;Banner&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;In this blog post, we are going to talk about how the GFW (Great Firewall) functions, common tools to bypass it, and explain how China&amp;rsquo;s international internet functions.&lt;/p&gt;&#xA;&lt;h3 id=&#34;how-does-the-gfw-function&#34;&gt;How does the GFW function?&lt;/h3&gt;&#xA;&lt;p&gt;We don&amp;rsquo;t know fully how GFW works but there are research articles from China on how to build GFW. We can make some educated guesses based on the projects around us. The GFW works by doing DPI (deep packet inspection)—that’s how most government censorship firewalls work. It inspects your internet packets looking for blocked sites, prohibited content, etc. Then it responds back with either a server reset error or a DNS poisoning attack.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Free proxy setup using Render and VLESS</title>
      <link>http://localhost:1313/posts/free-proxy-setup-using-render-and-vless/</link>
      <pubDate>Sun, 15 Jun 2025 08:50:32 +1000</pubDate>
      <guid>http://localhost:1313/posts/free-proxy-setup-using-render-and-vless/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://files.catbox.moe/90yuw9.png&#34; alt=&#34;Banner&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;This is based on my censorship bypass guide. You may have heard me mention that I use Render for my VPN. This setup is built on top of the VLESS protocol developed by V2Ray — a highly effective protocol for bypassing censorship.&lt;/p&gt;&#xA;&lt;p&gt;Each instance has a 10GB limit, but you can delete and redeploy the instance to reset the limit. The code is obfuscated to avoid keyword detection enforced by Render. Since Render is a web hosting platform, governments blocking Render will block all sites hosted on it. However, if only your specific address is blocked, you can simply redeploy your instance to get a new domain name.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Free VPS with Render</title>
      <link>http://localhost:1313/posts/free-vps-with-render/</link>
      <pubDate>Sun, 15 Jun 2025 08:50:32 +1000</pubDate>
      <guid>http://localhost:1313/posts/free-vps-with-render/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://files.catbox.moe/r8gz9i.png&#34; alt=&#34;Banner&#34;&gt;&#xA;&lt;strong&gt;Important Notice:&lt;/strong&gt;&#xA;This is a new hack I discovered, so please &lt;strong&gt;do not share&lt;/strong&gt; it publicly to avoid it being patched.&lt;/p&gt;&#xA;&lt;h3 id=&#34;why-use-render-as-a-vps-provider&#34;&gt;Why Use Render as a VPS Provider?&lt;/h3&gt;&#xA;&lt;p&gt;Render is an excellent choice because it&amp;rsquo;s &lt;strong&gt;free&lt;/strong&gt; and doesn&amp;rsquo;t require a credit card. However, since Render restricts terminal access behind a paywall, we&amp;rsquo;ll need to get creative. Our solution is to run a &lt;strong&gt;Linux Docker container&lt;/strong&gt; with a &lt;strong&gt;web terminal&lt;/strong&gt;, secured by &lt;strong&gt;HTTP basic authentication&lt;/strong&gt;. This method ensures we have some security while still keeping the service free.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Self-Host IP Logger Using Render</title>
      <link>http://localhost:1313/posts/self-host-ip-logger-using-render/</link>
      <pubDate>Sun, 15 Jun 2025 08:50:32 +1000</pubDate>
      <guid>http://localhost:1313/posts/self-host-ip-logger-using-render/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://files.catbox.moe/wi79f7.png&#34; alt=&#34;Banner&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;important-considerations&#34;&gt;Important Considerations&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Your URL will stop working after 5 minutes if you host other services on the same account. My suggestion is to create multiple accounts for each service, as Render has an instance time limit per month.&lt;/li&gt;&#xA;&lt;li&gt;You need to have a Discord account and a Discord server.&lt;/li&gt;&#xA;&lt;li&gt;You can&amp;rsquo;t deactivate URLs after they have been sent.&lt;/li&gt;&#xA;&lt;li&gt;There is a web UI to help you set up links.&lt;/li&gt;&#xA;&lt;li&gt;Feel free to disguise this as an image hosting site.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;how-to-set-up&#34;&gt;How to Set Up&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Create a new web service.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Set Up Code Server with Render</title>
      <link>http://localhost:1313/posts/set-up-code-server-with-render/</link>
      <pubDate>Sun, 15 Jun 2025 08:50:32 +1000</pubDate>
      <guid>http://localhost:1313/posts/set-up-code-server-with-render/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://files.catbox.moe/reyiel.png&#34; alt=&#34;Banner&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;what-is-code-server&#34;&gt;What is Code Server?&lt;/h3&gt;&#xA;&lt;p&gt;It&amp;rsquo;s just VS Code in a browser, but with a terminal and environment to run your code.&lt;/p&gt;&#xA;&lt;h3 id=&#34;important-considerations&#34;&gt;Important Considerations:&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Data Loss Warning&lt;/strong&gt;: You will lose all your data and dependencies if you don&amp;rsquo;t keep the tab open for more than 5 seconds—unless you use UptimeRobot, which can keep your instance alive and preserve data for up to a month. If using UptimeRobot, set it up on a new account without any other monitored services.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Bandwidth Limit&lt;/strong&gt;: Render has a 10GB outbound bandwidth limit. You must not exceed this. &amp;ldquo;Outbound&amp;rdquo; means traffic going out—for example, downloading packages or files. Once the limit is exceeded, you can simply redeploy the instance, but &lt;strong&gt;your data will be lost&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;System Resources&lt;/strong&gt;: The free tier includes 512MB of RAM and 0.1 CPU.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;how-to-deploy-it&#34;&gt;How to Deploy It:&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Open your &lt;a href=&#34;https://dashboard.render.com/&#34;&gt;Render Dashboard&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Click &lt;strong&gt;&amp;ldquo;Add New&amp;rdquo;&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Select &lt;strong&gt;&amp;ldquo;Web Service&amp;rdquo;&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Click &lt;strong&gt;&amp;ldquo;Public Git Repository&amp;rdquo;&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Paste in:&#xA;&lt;code&gt;https://github.com/eli32-vlc/code-server-dockefile&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;(Optional) Choose your preferred region.&lt;/li&gt;&#xA;&lt;li&gt;For &lt;strong&gt;Instance Type&lt;/strong&gt;, select &lt;strong&gt;Free&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Click &lt;strong&gt;&amp;ldquo;Deploy Web Service&amp;rdquo;&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Scroll down to &lt;strong&gt;Environment Variables&lt;/strong&gt;, click &lt;strong&gt;&amp;ldquo;Add from .env&amp;rdquo;&lt;/strong&gt;, and paste:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Deep Dive into the Henan Firewall</title>
      <link>http://localhost:1313/posts/deep-dive-into-the-henan-firewall/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/deep-dive-into-the-henan-firewall/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://files.catbox.moe/g6ujml.png&#34; alt=&#34;Banner&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;For decades, censorship in China has been enforced through the Great Firewall (GFW), developed by the Cyberspace Administration of China. The GFW commonly uses DNS poisoning, TCP RST packets to block websites, and Deep Packet Inspection (DPI) to analyze network traffic. However, a recent research paper published in May 2025 revealed that the Chinese province of Henan has deployed its own regional censorship firewall. Since August 2023, the Henan firewall has been analyzing network packets originating from the province and has blocked over five times as many websites as the GFW, generally targeting generic second-level domains such as .com.au. Unlike the GFW, which may inject multiple packets to disrupt connections, the Henan firewall uses a distinctive TCP RST+ACK packet. Notably, a full TCP handshake is not required for a website or traffic to be blocked, meaning it can send the RST+ACK packet during the initial traffic pattern. Similar to the GFW, it monitors all TCP ports for TLS traffic, which is commonly used for HTTPS, leaving no ports safe.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
